<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: build/zmq_distributor valgrind_test.txt 6011 6012</line>
</preamble>

<pid>41937</pid>
<ppid>41335</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--tool=memcheck</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=valgrind_output_distributor.xml</arg>
    <arg>--gen-suppressions=all</arg>
    <arg>--leak-check=full</arg>
    <arg>--leak-resolution=med</arg>
    <arg>--track-origins=yes</arg>
    <arg>--trace-children=yes</arg>
    <arg>--vgdb=no</arg>
    <arg>--fair-sched=yes</arg>
  </vargv>
  <argv>
    <exe>build/zmq_distributor</exe>
    <arg>valgrind_test.txt</arg>
    <arg>6011</arg>
    <arg>6012</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.075 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param poll(ufds.fd) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x4A15BBF</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc-2.31.so</obj>
      <fn>poll</fn>
      <dir>/build/glibc-LcI20x/glibc-2.31/io/../sysdeps/unix/sysv/linux</dir>
      <file>poll.c</file>
      <line>29</line>
    </frame>
    <frame>
      <ip>0x48D8338</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libzmq.so.5.2.2</obj>
      <fn>zmq_poll</fn>
    </frame>
    <frame>
      <ip>0x10A254</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>main</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>zmq_distributor.c</file>
      <line>69</line>
    </frame>
  </stack>
  <auxwhat>Address 0x1ffeff2ee0 is on thread 1's stack</auxwhat>
  <auxwhat>in frame #1, created by zmq_poll (???:)</auxwhat>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x109DFA</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>main</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>zmq_distributor.c</file>
      <line>35</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Param</skind>
    <skaux>poll(ufds.fd)</skaux>
    <sframe> <fun>poll</fun> </sframe>
    <sframe> <fun>zmq_poll</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Param
   poll(ufds.fd)
   fun:poll
   fun:zmq_poll
   fun:main
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Param</skind>
    <skaux>poll(ufds.fd)</skaux>
    <sframe> <fun>poll</fun> </sframe>
    <sframe> <fun>zmq_poll</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Param
   poll(ufds.fd)
   fun:poll
   fun:zmq_poll
   fun:main
}
]]>
    </rawtext>
  </suppression>

<status>
  <state>FINISHED</state>
  <time>00:00:00:01.644 </time>
</status>

<error>
  <unique>0xc</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>31,040 (23,040 direct, 8,000 indirect) bytes in 360 blocks are definitely lost in loss record 12 of 13</text>
    <leakedbytes>31040</leakedbytes>
    <leakedblocks>360</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x10AE55</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>insert_normal</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>data.c</file>
      <line>132</line>
    </frame>
    <frame>
      <ip>0x10A9AD</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>split_and_store</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>zmq_distributor.c</file>
      <line>207</line>
    </frame>
    <frame>
      <ip>0x10A3D6</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>main</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>zmq_distributor.c</file>
      <line>93</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: definite</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>insert_normal</fun> </sframe>
    <sframe> <fun>split_and_store</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:insert_normal
   fun:split_and_store
   fun:main
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: definite</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>insert_normal</fun> </sframe>
    <sframe> <fun>split_and_store</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:insert_normal
   fun:split_and_store
   fun:main
}
]]>
    </rawtext>
  </suppression>
<error>
  <unique>0xd</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>34,920 (72 direct, 34,848 indirect) bytes in 1 blocks are definitely lost in loss record 13 of 13</text>
    <leakedbytes>34920</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483B7F3</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>malloc</fn>
    </frame>
    <frame>
      <ip>0x10AFDD</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>newNode</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>data.c</file>
      <line>163</line>
    </frame>
    <frame>
      <ip>0x10B04F</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>insert</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>data.c</file>
      <line>173</line>
    </frame>
    <frame>
      <ip>0x10B1EE</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>hashmap_to_tree</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>data.c</file>
      <line>213</line>
    </frame>
    <frame>
      <ip>0x10A516</ip>
      <obj>/home/retsu/RN-Praxisaufgaben/praxis3/build/zmq_distributor</obj>
      <fn>main</fn>
      <dir>/home/retsu/RN-Praxisaufgaben/praxis3</dir>
      <file>zmq_distributor.c</file>
      <line>120</line>
    </frame>
  </stack>
  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: definite</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>newNode</fun> </sframe>
    <sframe> <fun>insert</fun> </sframe>
    <sframe> <fun>hashmap_to_tree</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:newNode
   fun:insert
   fun:hashmap_to_tree
   fun:main
}
]]>
    </rawtext>
  </suppression>
</error>

  <suppression>
    <sname>insert_a_suppression_name_here</sname>
    <skind>Memcheck:Leak</skind>
    <skaux>match-leak-kinds: definite</skaux>
    <sframe> <fun>malloc</fun> </sframe>
    <sframe> <fun>newNode</fun> </sframe>
    <sframe> <fun>insert</fun> </sframe>
    <sframe> <fun>hashmap_to_tree</fun> </sframe>
    <sframe> <fun>main</fun> </sframe>
    <rawtext>
<![CDATA[
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: definite
   fun:malloc
   fun:newNode
   fun:insert
   fun:hashmap_to_tree
   fun:main
}
]]>
    </rawtext>
  </suppression>
<errorcounts>
  <pair>
    <count>1</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

